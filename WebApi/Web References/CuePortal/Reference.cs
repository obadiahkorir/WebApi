//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WebApi.CuePortal {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CuePortal_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal")]
    public partial class CuePortal : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback DeleteStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGraduationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveRejectRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBuildingOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccreditationGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProgramRationaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditProgramRationaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProgramRationaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDeliveryModeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDeliveryModeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGradingSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditGradingSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGradingSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddInstructionalMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCourseLearningOutcomeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback FngeneratecodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddKnownStakeHolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStrengthOrWeaknessOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSARCommitteesCompositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTrusteeSenateCompositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddHRSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDevelopmentTrainingOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStudentDraftOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAdminSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback InstitutionSignupOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyForAccreditationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyForProgramAccreditationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAcademicStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAcademicStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNonAcademicStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteNonAcademicStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDisciplineCaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditDisciplineCaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDisciplineCaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFinancialSubmissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFinancialSubmissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddResearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditResearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteResearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterPeerReviewerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePeerReviewerPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPeerAcademicQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPeerEmploymentRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInstitutionNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLandOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLandOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditLandOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditGeneralDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditVCDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLibraryStaffOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLibraryStaffOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CuePortal() {
            this.Url = global::WebApi.Properties.Settings.Default.WebApi_CuePortal_CuePortal;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event DeleteStudentCompletedEventHandler DeleteStudentCompleted;
        
        /// <remarks/>
        public event AddGraduationCompletedEventHandler AddGraduationCompleted;
        
        /// <remarks/>
        public event SendApprovalRequestCompletedEventHandler SendApprovalRequestCompleted;
        
        /// <remarks/>
        public event ApproveRejectRequestCompletedEventHandler ApproveRejectRequestCompleted;
        
        /// <remarks/>
        public event CancelApprovalRequestCompletedEventHandler CancelApprovalRequestCompleted;
        
        /// <remarks/>
        public event AddBuildingCompletedEventHandler AddBuildingCompleted;
        
        /// <remarks/>
        public event AccreditationGeneralDetailsCompletedEventHandler AccreditationGeneralDetailsCompleted;
        
        /// <remarks/>
        public event AddProgramRationaleCompletedEventHandler AddProgramRationaleCompleted;
        
        /// <remarks/>
        public event EditProgramRationaleCompletedEventHandler EditProgramRationaleCompleted;
        
        /// <remarks/>
        public event DeleteProgramRationaleCompletedEventHandler DeleteProgramRationaleCompleted;
        
        /// <remarks/>
        public event AddLearningOutcomeCompletedEventHandler AddLearningOutcomeCompleted;
        
        /// <remarks/>
        public event EditLearningOutcomeCompletedEventHandler EditLearningOutcomeCompleted;
        
        /// <remarks/>
        public event DeleteLearningOutcomeCompletedEventHandler DeleteLearningOutcomeCompleted;
        
        /// <remarks/>
        public event AddDeliveryModeCompletedEventHandler AddDeliveryModeCompleted;
        
        /// <remarks/>
        public event DeleteDeliveryModeCompletedEventHandler DeleteDeliveryModeCompleted;
        
        /// <remarks/>
        public event AddGradingSystemCompletedEventHandler AddGradingSystemCompleted;
        
        /// <remarks/>
        public event EditGradingSystemCompletedEventHandler EditGradingSystemCompleted;
        
        /// <remarks/>
        public event DeleteGradingSystemCompletedEventHandler DeleteGradingSystemCompleted;
        
        /// <remarks/>
        public event AddUnitCompletedEventHandler AddUnitCompleted;
        
        /// <remarks/>
        public event AddInstructionalMethodCompletedEventHandler AddInstructionalMethodCompleted;
        
        /// <remarks/>
        public event AddCourseLearningOutcomeCompletedEventHandler AddCourseLearningOutcomeCompleted;
        
        /// <remarks/>
        public event AddBookCompletedEventHandler AddBookCompleted;
        
        /// <remarks/>
        public event FngeneratecodesCompletedEventHandler FngeneratecodesCompleted;
        
        /// <remarks/>
        public event AddKnownStakeHolderCompletedEventHandler AddKnownStakeHolderCompleted;
        
        /// <remarks/>
        public event AddStrengthOrWeaknessCompletedEventHandler AddStrengthOrWeaknessCompleted;
        
        /// <remarks/>
        public event AddSARCommitteesCompositionCompletedEventHandler AddSARCommitteesCompositionCompleted;
        
        /// <remarks/>
        public event AddTrusteeSenateCompositionCompletedEventHandler AddTrusteeSenateCompositionCompleted;
        
        /// <remarks/>
        public event AddHRSummaryCompletedEventHandler AddHRSummaryCompleted;
        
        /// <remarks/>
        public event AddDevelopmentTrainingCompletedEventHandler AddDevelopmentTrainingCompleted;
        
        /// <remarks/>
        public event AddStudentDraftCompletedEventHandler AddStudentDraftCompleted;
        
        /// <remarks/>
        public event ApproveCompletedEventHandler ApproveCompleted;
        
        /// <remarks/>
        public event AddAdminSpaceCompletedEventHandler AddAdminSpaceCompleted;
        
        /// <remarks/>
        public event InstitutionSignupCompletedEventHandler InstitutionSignupCompleted;
        
        /// <remarks/>
        public event ApplyForAccreditationCompletedEventHandler ApplyForAccreditationCompleted;
        
        /// <remarks/>
        public event ApplyForProgramAccreditationCompletedEventHandler ApplyForProgramAccreditationCompleted;
        
        /// <remarks/>
        public event AddAcademicStaffCompletedEventHandler AddAcademicStaffCompleted;
        
        /// <remarks/>
        public event DeleteAcademicStaffCompletedEventHandler DeleteAcademicStaffCompleted;
        
        /// <remarks/>
        public event AddNonAcademicStaffCompletedEventHandler AddNonAcademicStaffCompleted;
        
        /// <remarks/>
        public event DeleteNonAcademicStaffCompletedEventHandler DeleteNonAcademicStaffCompleted;
        
        /// <remarks/>
        public event AddDisciplineCaseCompletedEventHandler AddDisciplineCaseCompleted;
        
        /// <remarks/>
        public event EditDisciplineCaseCompletedEventHandler EditDisciplineCaseCompleted;
        
        /// <remarks/>
        public event DeleteDisciplineCaseCompletedEventHandler DeleteDisciplineCaseCompleted;
        
        /// <remarks/>
        public event AddFinancialSubmissionCompletedEventHandler AddFinancialSubmissionCompleted;
        
        /// <remarks/>
        public event DeleteFinancialSubmissionCompletedEventHandler DeleteFinancialSubmissionCompleted;
        
        /// <remarks/>
        public event AddResearchCompletedEventHandler AddResearchCompleted;
        
        /// <remarks/>
        public event EditResearchCompletedEventHandler EditResearchCompleted;
        
        /// <remarks/>
        public event DeleteResearchCompletedEventHandler DeleteResearchCompleted;
        
        /// <remarks/>
        public event RegisterPeerReviewerCompletedEventHandler RegisterPeerReviewerCompleted;
        
        /// <remarks/>
        public event UpdatePeerReviewerPasswordCompletedEventHandler UpdatePeerReviewerPasswordCompleted;
        
        /// <remarks/>
        public event AddPeerAcademicQualificationsCompletedEventHandler AddPeerAcademicQualificationsCompleted;
        
        /// <remarks/>
        public event AddPeerEmploymentRecordCompletedEventHandler AddPeerEmploymentRecordCompleted;
        
        /// <remarks/>
        public event GetInstitutionNumberCompletedEventHandler GetInstitutionNumberCompleted;
        
        /// <remarks/>
        public event AddLandCompletedEventHandler AddLandCompleted;
        
        /// <remarks/>
        public event DeleteLandCompletedEventHandler DeleteLandCompleted;
        
        /// <remarks/>
        public event EditLandCompletedEventHandler EditLandCompleted;
        
        /// <remarks/>
        public event EditGeneralDetailsCompletedEventHandler EditGeneralDetailsCompleted;
        
        /// <remarks/>
        public event EditVCDetailsCompletedEventHandler EditVCDetailsCompleted;
        
        /// <remarks/>
        public event AddLibraryStaffCompletedEventHandler AddLibraryStaffCompleted;
        
        /// <remarks/>
        public event DeleteLibraryStaffCompletedEventHandler DeleteLibraryStaffCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteStudent", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteStudent_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteStudent(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteStudent", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteStudentAsync(int entryNo, string user, string password) {
            this.DeleteStudentAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteStudentAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteStudentOperationCompleted == null)) {
                this.DeleteStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteStudentOperationCompleted);
            }
            this.InvokeAsync("DeleteStudent", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteStudentOperationCompleted, userState);
        }
        
        private void OnDeleteStudentOperationCompleted(object arg) {
            if ((this.DeleteStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteStudentCompleted(this, new DeleteStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddGraduation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddGraduation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddGraduation(string idNo, string admissionNumber, string firstName, string middleName, string lastName, string programCode, string credit, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime graduationDate, string userCode, string password) {
            object[] results = this.Invoke("AddGraduation", new object[] {
                        idNo,
                        admissionNumber,
                        firstName,
                        middleName,
                        lastName,
                        programCode,
                        credit,
                        graduationDate,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddGraduationAsync(string idNo, string admissionNumber, string firstName, string middleName, string lastName, string programCode, string credit, System.DateTime graduationDate, string userCode, string password) {
            this.AddGraduationAsync(idNo, admissionNumber, firstName, middleName, lastName, programCode, credit, graduationDate, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddGraduationAsync(string idNo, string admissionNumber, string firstName, string middleName, string lastName, string programCode, string credit, System.DateTime graduationDate, string userCode, string password, object userState) {
            if ((this.AddGraduationOperationCompleted == null)) {
                this.AddGraduationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGraduationOperationCompleted);
            }
            this.InvokeAsync("AddGraduation", new object[] {
                        idNo,
                        admissionNumber,
                        firstName,
                        middleName,
                        lastName,
                        programCode,
                        credit,
                        graduationDate,
                        userCode,
                        password}, this.AddGraduationOperationCompleted, userState);
        }
        
        private void OnAddGraduationOperationCompleted(object arg) {
            if ((this.AddGraduationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGraduationCompleted(this, new AddGraduationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:SendApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="SendApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendApprovalRequest(string userCode, string password) {
            object[] results = this.Invoke("SendApprovalRequest", new object[] {
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendApprovalRequestAsync(string userCode, string password) {
            this.SendApprovalRequestAsync(userCode, password, null);
        }
        
        /// <remarks/>
        public void SendApprovalRequestAsync(string userCode, string password, object userState) {
            if ((this.SendApprovalRequestOperationCompleted == null)) {
                this.SendApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("SendApprovalRequest", new object[] {
                        userCode,
                        password}, this.SendApprovalRequestOperationCompleted, userState);
        }
        
        private void OnSendApprovalRequestOperationCompleted(object arg) {
            if ((this.SendApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendApprovalRequestCompleted(this, new SendApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ApproveRejectRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ApproveRejectRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApproveRejectRequest(int entryId, string userCode, string password, bool approveOrReject, string comment) {
            object[] results = this.Invoke("ApproveRejectRequest", new object[] {
                        entryId,
                        userCode,
                        password,
                        approveOrReject,
                        comment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveRejectRequestAsync(int entryId, string userCode, string password, bool approveOrReject, string comment) {
            this.ApproveRejectRequestAsync(entryId, userCode, password, approveOrReject, comment, null);
        }
        
        /// <remarks/>
        public void ApproveRejectRequestAsync(int entryId, string userCode, string password, bool approveOrReject, string comment, object userState) {
            if ((this.ApproveRejectRequestOperationCompleted == null)) {
                this.ApproveRejectRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveRejectRequestOperationCompleted);
            }
            this.InvokeAsync("ApproveRejectRequest", new object[] {
                        entryId,
                        userCode,
                        password,
                        approveOrReject,
                        comment}, this.ApproveRejectRequestOperationCompleted, userState);
        }
        
        private void OnApproveRejectRequestOperationCompleted(object arg) {
            if ((this.ApproveRejectRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveRejectRequestCompleted(this, new ApproveRejectRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:CancelApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="CancelApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CancelApprovalRequest(string userCode, string userPassword, int entryId) {
            object[] results = this.Invoke("CancelApprovalRequest", new object[] {
                        userCode,
                        userPassword,
                        entryId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelApprovalRequestAsync(string userCode, string userPassword, int entryId) {
            this.CancelApprovalRequestAsync(userCode, userPassword, entryId, null);
        }
        
        /// <remarks/>
        public void CancelApprovalRequestAsync(string userCode, string userPassword, int entryId, object userState) {
            if ((this.CancelApprovalRequestOperationCompleted == null)) {
                this.CancelApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("CancelApprovalRequest", new object[] {
                        userCode,
                        userPassword,
                        entryId}, this.CancelApprovalRequestOperationCompleted, userState);
        }
        
        private void OnCancelApprovalRequestOperationCompleted(object arg) {
            if ((this.CancelApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelApprovalRequestCompleted(this, new CancelApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddBuilding", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddBuilding_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddBuilding(string campus, int category, string description, decimal capacity, int numberOfFloors, decimal sizeSqMetres, string location, bool provisionPWD, string userCode, string password) {
            object[] results = this.Invoke("AddBuilding", new object[] {
                        campus,
                        category,
                        description,
                        capacity,
                        numberOfFloors,
                        sizeSqMetres,
                        location,
                        provisionPWD,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddBuildingAsync(string campus, int category, string description, decimal capacity, int numberOfFloors, decimal sizeSqMetres, string location, bool provisionPWD, string userCode, string password) {
            this.AddBuildingAsync(campus, category, description, capacity, numberOfFloors, sizeSqMetres, location, provisionPWD, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddBuildingAsync(string campus, int category, string description, decimal capacity, int numberOfFloors, decimal sizeSqMetres, string location, bool provisionPWD, string userCode, string password, object userState) {
            if ((this.AddBuildingOperationCompleted == null)) {
                this.AddBuildingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBuildingOperationCompleted);
            }
            this.InvokeAsync("AddBuilding", new object[] {
                        campus,
                        category,
                        description,
                        capacity,
                        numberOfFloors,
                        sizeSqMetres,
                        location,
                        provisionPWD,
                        userCode,
                        password}, this.AddBuildingOperationCompleted, userState);
        }
        
        private void OnAddBuildingOperationCompleted(object arg) {
            if ((this.AddBuildingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBuildingCompleted(this, new AddBuildingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AccreditationGeneralDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AccreditationGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AccreditationGeneralDetails(string accreditationNo, string campus, string programName, int programDuration, string programDomain, bool gpa, int programLevel, string userCode, string password) {
            object[] results = this.Invoke("AccreditationGeneralDetails", new object[] {
                        accreditationNo,
                        campus,
                        programName,
                        programDuration,
                        programDomain,
                        gpa,
                        programLevel,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AccreditationGeneralDetailsAsync(string accreditationNo, string campus, string programName, int programDuration, string programDomain, bool gpa, int programLevel, string userCode, string password) {
            this.AccreditationGeneralDetailsAsync(accreditationNo, campus, programName, programDuration, programDomain, gpa, programLevel, userCode, password, null);
        }
        
        /// <remarks/>
        public void AccreditationGeneralDetailsAsync(string accreditationNo, string campus, string programName, int programDuration, string programDomain, bool gpa, int programLevel, string userCode, string password, object userState) {
            if ((this.AccreditationGeneralDetailsOperationCompleted == null)) {
                this.AccreditationGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccreditationGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("AccreditationGeneralDetails", new object[] {
                        accreditationNo,
                        campus,
                        programName,
                        programDuration,
                        programDomain,
                        gpa,
                        programLevel,
                        userCode,
                        password}, this.AccreditationGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnAccreditationGeneralDetailsOperationCompleted(object arg) {
            if ((this.AccreditationGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccreditationGeneralDetailsCompleted(this, new AccreditationGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddProgramRationale", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddProgramRationale_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddProgramRationale(string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password) {
            object[] results = this.Invoke("AddProgramRationale", new object[] {
                        accreditationNo,
                        rationaleCategory,
                        rationaleDescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProgramRationaleAsync(string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password) {
            this.AddProgramRationaleAsync(accreditationNo, rationaleCategory, rationaleDescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddProgramRationaleAsync(string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password, object userState) {
            if ((this.AddProgramRationaleOperationCompleted == null)) {
                this.AddProgramRationaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProgramRationaleOperationCompleted);
            }
            this.InvokeAsync("AddProgramRationale", new object[] {
                        accreditationNo,
                        rationaleCategory,
                        rationaleDescription,
                        userCode,
                        password}, this.AddProgramRationaleOperationCompleted, userState);
        }
        
        private void OnAddProgramRationaleOperationCompleted(object arg) {
            if ((this.AddProgramRationaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProgramRationaleCompleted(this, new AddProgramRationaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditProgramRationale", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditProgramRationale_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditProgramRationale(int rationaleCode, string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password) {
            object[] results = this.Invoke("EditProgramRationale", new object[] {
                        rationaleCode,
                        accreditationNo,
                        rationaleCategory,
                        rationaleDescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditProgramRationaleAsync(int rationaleCode, string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password) {
            this.EditProgramRationaleAsync(rationaleCode, accreditationNo, rationaleCategory, rationaleDescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditProgramRationaleAsync(int rationaleCode, string accreditationNo, int rationaleCategory, string rationaleDescription, string userCode, string password, object userState) {
            if ((this.EditProgramRationaleOperationCompleted == null)) {
                this.EditProgramRationaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditProgramRationaleOperationCompleted);
            }
            this.InvokeAsync("EditProgramRationale", new object[] {
                        rationaleCode,
                        accreditationNo,
                        rationaleCategory,
                        rationaleDescription,
                        userCode,
                        password}, this.EditProgramRationaleOperationCompleted, userState);
        }
        
        private void OnEditProgramRationaleOperationCompleted(object arg) {
            if ((this.EditProgramRationaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditProgramRationaleCompleted(this, new EditProgramRationaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteProgramRationale", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteProgramRationale_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteProgramRationale(int rationaleCode, string accreditationNo, string userCode, string password) {
            object[] results = this.Invoke("DeleteProgramRationale", new object[] {
                        rationaleCode,
                        accreditationNo,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProgramRationaleAsync(int rationaleCode, string accreditationNo, string userCode, string password) {
            this.DeleteProgramRationaleAsync(rationaleCode, accreditationNo, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteProgramRationaleAsync(int rationaleCode, string accreditationNo, string userCode, string password, object userState) {
            if ((this.DeleteProgramRationaleOperationCompleted == null)) {
                this.DeleteProgramRationaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProgramRationaleOperationCompleted);
            }
            this.InvokeAsync("DeleteProgramRationale", new object[] {
                        rationaleCode,
                        accreditationNo,
                        userCode,
                        password}, this.DeleteProgramRationaleOperationCompleted, userState);
        }
        
        private void OnDeleteProgramRationaleOperationCompleted(object arg) {
            if ((this.DeleteProgramRationaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProgramRationaleCompleted(this, new DeleteProgramRationaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddLearningOutcome(string accreditationNo, string outcomeNo, string outcomeDescription, string userCode, string password) {
            object[] results = this.Invoke("AddLearningOutcome", new object[] {
                        accreditationNo,
                        outcomeNo,
                        outcomeDescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLearningOutcomeAsync(string accreditationNo, string outcomeNo, string outcomeDescription, string userCode, string password) {
            this.AddLearningOutcomeAsync(accreditationNo, outcomeNo, outcomeDescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddLearningOutcomeAsync(string accreditationNo, string outcomeNo, string outcomeDescription, string userCode, string password, object userState) {
            if ((this.AddLearningOutcomeOperationCompleted == null)) {
                this.AddLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("AddLearningOutcome", new object[] {
                        accreditationNo,
                        outcomeNo,
                        outcomeDescription,
                        userCode,
                        password}, this.AddLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnAddLearningOutcomeOperationCompleted(object arg) {
            if ((this.AddLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLearningOutcomeCompleted(this, new AddLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditLearningOutcome(string accreditationNo, int outcomeCode, string outcomeNo, string outcomeDescription, string userCode, string password) {
            object[] results = this.Invoke("EditLearningOutcome", new object[] {
                        accreditationNo,
                        outcomeCode,
                        outcomeNo,
                        outcomeDescription,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditLearningOutcomeAsync(string accreditationNo, int outcomeCode, string outcomeNo, string outcomeDescription, string userCode, string password) {
            this.EditLearningOutcomeAsync(accreditationNo, outcomeCode, outcomeNo, outcomeDescription, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditLearningOutcomeAsync(string accreditationNo, int outcomeCode, string outcomeNo, string outcomeDescription, string userCode, string password, object userState) {
            if ((this.EditLearningOutcomeOperationCompleted == null)) {
                this.EditLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("EditLearningOutcome", new object[] {
                        accreditationNo,
                        outcomeCode,
                        outcomeNo,
                        outcomeDescription,
                        userCode,
                        password}, this.EditLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnEditLearningOutcomeOperationCompleted(object arg) {
            if ((this.EditLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditLearningOutcomeCompleted(this, new EditLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteLearningOutcome(string accreditationNo, int outcomeCode, string userCode, string password) {
            object[] results = this.Invoke("DeleteLearningOutcome", new object[] {
                        accreditationNo,
                        outcomeCode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLearningOutcomeAsync(string accreditationNo, int outcomeCode, string userCode, string password) {
            this.DeleteLearningOutcomeAsync(accreditationNo, outcomeCode, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteLearningOutcomeAsync(string accreditationNo, int outcomeCode, string userCode, string password, object userState) {
            if ((this.DeleteLearningOutcomeOperationCompleted == null)) {
                this.DeleteLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("DeleteLearningOutcome", new object[] {
                        accreditationNo,
                        outcomeCode,
                        userCode,
                        password}, this.DeleteLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnDeleteLearningOutcomeOperationCompleted(object arg) {
            if ((this.DeleteLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLearningOutcomeCompleted(this, new DeleteLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddDeliveryMode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddDeliveryMode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDeliveryMode(string accreditationNo, string deliveryMode, string userCode, string password) {
            object[] results = this.Invoke("AddDeliveryMode", new object[] {
                        accreditationNo,
                        deliveryMode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDeliveryModeAsync(string accreditationNo, string deliveryMode, string userCode, string password) {
            this.AddDeliveryModeAsync(accreditationNo, deliveryMode, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddDeliveryModeAsync(string accreditationNo, string deliveryMode, string userCode, string password, object userState) {
            if ((this.AddDeliveryModeOperationCompleted == null)) {
                this.AddDeliveryModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDeliveryModeOperationCompleted);
            }
            this.InvokeAsync("AddDeliveryMode", new object[] {
                        accreditationNo,
                        deliveryMode,
                        userCode,
                        password}, this.AddDeliveryModeOperationCompleted, userState);
        }
        
        private void OnAddDeliveryModeOperationCompleted(object arg) {
            if ((this.AddDeliveryModeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDeliveryModeCompleted(this, new AddDeliveryModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteDeliveryMode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteDeliveryMode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteDeliveryMode(string accreditationNo, string deliveryMode, string userCode, string password) {
            object[] results = this.Invoke("DeleteDeliveryMode", new object[] {
                        accreditationNo,
                        deliveryMode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDeliveryModeAsync(string accreditationNo, string deliveryMode, string userCode, string password) {
            this.DeleteDeliveryModeAsync(accreditationNo, deliveryMode, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteDeliveryModeAsync(string accreditationNo, string deliveryMode, string userCode, string password, object userState) {
            if ((this.DeleteDeliveryModeOperationCompleted == null)) {
                this.DeleteDeliveryModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDeliveryModeOperationCompleted);
            }
            this.InvokeAsync("DeleteDeliveryMode", new object[] {
                        accreditationNo,
                        deliveryMode,
                        userCode,
                        password}, this.DeleteDeliveryModeOperationCompleted, userState);
        }
        
        private void OnDeleteDeliveryModeOperationCompleted(object arg) {
            if ((this.DeleteDeliveryModeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDeliveryModeCompleted(this, new DeleteDeliveryModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddGradingSystem", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddGradingSystem_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddGradingSystem(string accreditationNo, string gradingCode, decimal minimum, decimal maximum, decimal gpaPoints, string userCode, string password) {
            object[] results = this.Invoke("AddGradingSystem", new object[] {
                        accreditationNo,
                        gradingCode,
                        minimum,
                        maximum,
                        gpaPoints,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddGradingSystemAsync(string accreditationNo, string gradingCode, decimal minimum, decimal maximum, decimal gpaPoints, string userCode, string password) {
            this.AddGradingSystemAsync(accreditationNo, gradingCode, minimum, maximum, gpaPoints, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddGradingSystemAsync(string accreditationNo, string gradingCode, decimal minimum, decimal maximum, decimal gpaPoints, string userCode, string password, object userState) {
            if ((this.AddGradingSystemOperationCompleted == null)) {
                this.AddGradingSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGradingSystemOperationCompleted);
            }
            this.InvokeAsync("AddGradingSystem", new object[] {
                        accreditationNo,
                        gradingCode,
                        minimum,
                        maximum,
                        gpaPoints,
                        userCode,
                        password}, this.AddGradingSystemOperationCompleted, userState);
        }
        
        private void OnAddGradingSystemOperationCompleted(object arg) {
            if ((this.AddGradingSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGradingSystemCompleted(this, new AddGradingSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditGradingSystem", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditGradingSystem_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditGradingSystem(string accreditationNo, int code, string gradingCode, decimal minimum, decimal maximum, decimal gpaPoints, string userCode, string password) {
            object[] results = this.Invoke("EditGradingSystem", new object[] {
                        accreditationNo,
                        code,
                        gradingCode,
                        minimum,
                        maximum,
                        gpaPoints,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditGradingSystemAsync(string accreditationNo, int code, string gradingCode, decimal minimum, decimal maximum, decimal gpaPoints, string userCode, string password) {
            this.EditGradingSystemAsync(accreditationNo, code, gradingCode, minimum, maximum, gpaPoints, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditGradingSystemAsync(string accreditationNo, int code, string gradingCode, decimal minimum, decimal maximum, decimal gpaPoints, string userCode, string password, object userState) {
            if ((this.EditGradingSystemOperationCompleted == null)) {
                this.EditGradingSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditGradingSystemOperationCompleted);
            }
            this.InvokeAsync("EditGradingSystem", new object[] {
                        accreditationNo,
                        code,
                        gradingCode,
                        minimum,
                        maximum,
                        gpaPoints,
                        userCode,
                        password}, this.EditGradingSystemOperationCompleted, userState);
        }
        
        private void OnEditGradingSystemOperationCompleted(object arg) {
            if ((this.EditGradingSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditGradingSystemCompleted(this, new EditGradingSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteGradingSystem", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteGradingSystem_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteGradingSystem(string accreditationNo, int code, string userCode, string password) {
            object[] results = this.Invoke("DeleteGradingSystem", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGradingSystemAsync(string accreditationNo, int code, string userCode, string password) {
            this.DeleteGradingSystemAsync(accreditationNo, code, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteGradingSystemAsync(string accreditationNo, int code, string userCode, string password, object userState) {
            if ((this.DeleteGradingSystemOperationCompleted == null)) {
                this.DeleteGradingSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGradingSystemOperationCompleted);
            }
            this.InvokeAsync("DeleteGradingSystem", new object[] {
                        accreditationNo,
                        code,
                        userCode,
                        password}, this.DeleteGradingSystemOperationCompleted, userState);
        }
        
        private void OnDeleteGradingSystemOperationCompleted(object arg) {
            if ((this.DeleteGradingSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGradingSystemCompleted(this, new DeleteGradingSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddUnit", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddUnit_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddUnit(string accreditationNo, string unitCode, string unitTitle, decimal creditHours, string yearCode, string courseCategory, string comments, string userCode, string password) {
            object[] results = this.Invoke("AddUnit", new object[] {
                        accreditationNo,
                        unitCode,
                        unitTitle,
                        creditHours,
                        yearCode,
                        courseCategory,
                        comments,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddUnitAsync(string accreditationNo, string unitCode, string unitTitle, decimal creditHours, string yearCode, string courseCategory, string comments, string userCode, string password) {
            this.AddUnitAsync(accreditationNo, unitCode, unitTitle, creditHours, yearCode, courseCategory, comments, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddUnitAsync(string accreditationNo, string unitCode, string unitTitle, decimal creditHours, string yearCode, string courseCategory, string comments, string userCode, string password, object userState) {
            if ((this.AddUnitOperationCompleted == null)) {
                this.AddUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUnitOperationCompleted);
            }
            this.InvokeAsync("AddUnit", new object[] {
                        accreditationNo,
                        unitCode,
                        unitTitle,
                        creditHours,
                        yearCode,
                        courseCategory,
                        comments,
                        userCode,
                        password}, this.AddUnitOperationCompleted, userState);
        }
        
        private void OnAddUnitOperationCompleted(object arg) {
            if ((this.AddUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUnitCompleted(this, new AddUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddInstructionalMethod", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddInstructionalMethod_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddInstructionalMethod(string accreditationNo, string deliveryMode, string userCode, string password) {
            object[] results = this.Invoke("AddInstructionalMethod", new object[] {
                        accreditationNo,
                        deliveryMode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddInstructionalMethodAsync(string accreditationNo, string deliveryMode, string userCode, string password) {
            this.AddInstructionalMethodAsync(accreditationNo, deliveryMode, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddInstructionalMethodAsync(string accreditationNo, string deliveryMode, string userCode, string password, object userState) {
            if ((this.AddInstructionalMethodOperationCompleted == null)) {
                this.AddInstructionalMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddInstructionalMethodOperationCompleted);
            }
            this.InvokeAsync("AddInstructionalMethod", new object[] {
                        accreditationNo,
                        deliveryMode,
                        userCode,
                        password}, this.AddInstructionalMethodOperationCompleted, userState);
        }
        
        private void OnAddInstructionalMethodOperationCompleted(object arg) {
            if ((this.AddInstructionalMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddInstructionalMethodCompleted(this, new AddInstructionalMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddCourseLearningOutcome", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddCourseLearningOutcome_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddCourseLearningOutcome(string accreditationNo, string learnigOutcomeCode, string courseCode, string userCode, string password) {
            object[] results = this.Invoke("AddCourseLearningOutcome", new object[] {
                        accreditationNo,
                        learnigOutcomeCode,
                        courseCode,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCourseLearningOutcomeAsync(string accreditationNo, string learnigOutcomeCode, string courseCode, string userCode, string password) {
            this.AddCourseLearningOutcomeAsync(accreditationNo, learnigOutcomeCode, courseCode, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddCourseLearningOutcomeAsync(string accreditationNo, string learnigOutcomeCode, string courseCode, string userCode, string password, object userState) {
            if ((this.AddCourseLearningOutcomeOperationCompleted == null)) {
                this.AddCourseLearningOutcomeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCourseLearningOutcomeOperationCompleted);
            }
            this.InvokeAsync("AddCourseLearningOutcome", new object[] {
                        accreditationNo,
                        learnigOutcomeCode,
                        courseCode,
                        userCode,
                        password}, this.AddCourseLearningOutcomeOperationCompleted, userState);
        }
        
        private void OnAddCourseLearningOutcomeOperationCompleted(object arg) {
            if ((this.AddCourseLearningOutcomeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCourseLearningOutcomeCompleted(this, new AddCourseLearningOutcomeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddBook", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddBook_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddBook(string accreditationNo, string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password) {
            object[] results = this.Invoke("AddBook", new object[] {
                        accreditationNo,
                        bookTitle,
                        courseCode,
                        authors,
                        yearOfPublication,
                        publishers,
                        url,
                        print,
                        electronic,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddBookAsync(string accreditationNo, string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password) {
            this.AddBookAsync(accreditationNo, bookTitle, courseCode, authors, yearOfPublication, publishers, url, print, electronic, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddBookAsync(string accreditationNo, string bookTitle, string courseCode, string authors, int yearOfPublication, string publishers, string url, bool print, bool electronic, string userCode, string password, object userState) {
            if ((this.AddBookOperationCompleted == null)) {
                this.AddBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBookOperationCompleted);
            }
            this.InvokeAsync("AddBook", new object[] {
                        accreditationNo,
                        bookTitle,
                        courseCode,
                        authors,
                        yearOfPublication,
                        publishers,
                        url,
                        print,
                        electronic,
                        userCode,
                        password}, this.AddBookOperationCompleted, userState);
        }
        
        private void OnAddBookOperationCompleted(object arg) {
            if ((this.AddBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBookCompleted(this, new AddBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:Fngeneratecodes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="Fngeneratecodes_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Fngeneratecodes(string uninumber) {
            object[] results = this.Invoke("Fngeneratecodes", new object[] {
                        uninumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FngeneratecodesAsync(string uninumber) {
            this.FngeneratecodesAsync(uninumber, null);
        }
        
        /// <remarks/>
        public void FngeneratecodesAsync(string uninumber, object userState) {
            if ((this.FngeneratecodesOperationCompleted == null)) {
                this.FngeneratecodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFngeneratecodesOperationCompleted);
            }
            this.InvokeAsync("Fngeneratecodes", new object[] {
                        uninumber}, this.FngeneratecodesOperationCompleted, userState);
        }
        
        private void OnFngeneratecodesOperationCompleted(object arg) {
            if ((this.FngeneratecodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FngeneratecodesCompleted(this, new FngeneratecodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddKnownStakeHolder", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddKnownStakeHolder_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddKnownStakeHolder(string qualityAuditNo, string stakeHolderCode, bool isStakeHolder, bool isEngaged, bool isAnalyzed, string userCode, string password) {
            object[] results = this.Invoke("AddKnownStakeHolder", new object[] {
                        qualityAuditNo,
                        stakeHolderCode,
                        isStakeHolder,
                        isEngaged,
                        isAnalyzed,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddKnownStakeHolderAsync(string qualityAuditNo, string stakeHolderCode, bool isStakeHolder, bool isEngaged, bool isAnalyzed, string userCode, string password) {
            this.AddKnownStakeHolderAsync(qualityAuditNo, stakeHolderCode, isStakeHolder, isEngaged, isAnalyzed, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddKnownStakeHolderAsync(string qualityAuditNo, string stakeHolderCode, bool isStakeHolder, bool isEngaged, bool isAnalyzed, string userCode, string password, object userState) {
            if ((this.AddKnownStakeHolderOperationCompleted == null)) {
                this.AddKnownStakeHolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddKnownStakeHolderOperationCompleted);
            }
            this.InvokeAsync("AddKnownStakeHolder", new object[] {
                        qualityAuditNo,
                        stakeHolderCode,
                        isStakeHolder,
                        isEngaged,
                        isAnalyzed,
                        userCode,
                        password}, this.AddKnownStakeHolderOperationCompleted, userState);
        }
        
        private void OnAddKnownStakeHolderOperationCompleted(object arg) {
            if ((this.AddKnownStakeHolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddKnownStakeHolderCompleted(this, new AddKnownStakeHolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStrengthOrWeakness", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStrengthOrWeakness_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStrengthOrWeakness(string qualityAuditNo, int type, string description, string userCode, string password) {
            object[] results = this.Invoke("AddStrengthOrWeakness", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStrengthOrWeaknessAsync(string qualityAuditNo, int type, string description, string userCode, string password) {
            this.AddStrengthOrWeaknessAsync(qualityAuditNo, type, description, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddStrengthOrWeaknessAsync(string qualityAuditNo, int type, string description, string userCode, string password, object userState) {
            if ((this.AddStrengthOrWeaknessOperationCompleted == null)) {
                this.AddStrengthOrWeaknessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStrengthOrWeaknessOperationCompleted);
            }
            this.InvokeAsync("AddStrengthOrWeakness", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        userCode,
                        password}, this.AddStrengthOrWeaknessOperationCompleted, userState);
        }
        
        private void OnAddStrengthOrWeaknessOperationCompleted(object arg) {
            if ((this.AddStrengthOrWeaknessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStrengthOrWeaknessCompleted(this, new AddStrengthOrWeaknessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddSARCommitteesComposition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddSARCommitteesComposition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddSARCommitteesComposition(string qualityAuditNo, int type, string description, int category, string userCode, string password) {
            object[] results = this.Invoke("AddSARCommitteesComposition", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        category,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSARCommitteesCompositionAsync(string qualityAuditNo, int type, string description, int category, string userCode, string password) {
            this.AddSARCommitteesCompositionAsync(qualityAuditNo, type, description, category, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddSARCommitteesCompositionAsync(string qualityAuditNo, int type, string description, int category, string userCode, string password, object userState) {
            if ((this.AddSARCommitteesCompositionOperationCompleted == null)) {
                this.AddSARCommitteesCompositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSARCommitteesCompositionOperationCompleted);
            }
            this.InvokeAsync("AddSARCommitteesComposition", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        category,
                        userCode,
                        password}, this.AddSARCommitteesCompositionOperationCompleted, userState);
        }
        
        private void OnAddSARCommitteesCompositionOperationCompleted(object arg) {
            if ((this.AddSARCommitteesCompositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSARCommitteesCompositionCompleted(this, new AddSARCommitteesCompositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddTrusteeSenateComposition", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddTrusteeSenateComposition_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddTrusteeSenateComposition(string qualityAuditNo, int type, string description, int category, string userCode, string password, string highestAcademicQualification, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime appointmentDate, string nationality) {
            object[] results = this.Invoke("AddTrusteeSenateComposition", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        category,
                        userCode,
                        password,
                        highestAcademicQualification,
                        appointmentDate,
                        nationality});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddTrusteeSenateCompositionAsync(string qualityAuditNo, int type, string description, int category, string userCode, string password, string highestAcademicQualification, System.DateTime appointmentDate, string nationality) {
            this.AddTrusteeSenateCompositionAsync(qualityAuditNo, type, description, category, userCode, password, highestAcademicQualification, appointmentDate, nationality, null);
        }
        
        /// <remarks/>
        public void AddTrusteeSenateCompositionAsync(string qualityAuditNo, int type, string description, int category, string userCode, string password, string highestAcademicQualification, System.DateTime appointmentDate, string nationality, object userState) {
            if ((this.AddTrusteeSenateCompositionOperationCompleted == null)) {
                this.AddTrusteeSenateCompositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTrusteeSenateCompositionOperationCompleted);
            }
            this.InvokeAsync("AddTrusteeSenateComposition", new object[] {
                        qualityAuditNo,
                        type,
                        description,
                        category,
                        userCode,
                        password,
                        highestAcademicQualification,
                        appointmentDate,
                        nationality}, this.AddTrusteeSenateCompositionOperationCompleted, userState);
        }
        
        private void OnAddTrusteeSenateCompositionOperationCompleted(object arg) {
            if ((this.AddTrusteeSenateCompositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTrusteeSenateCompositionCompleted(this, new AddTrusteeSenateCompositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddHRSummary", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddHRSummary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddHRSummary(string qualityAuditNo, int type, string category, int noFullEstablishment, int male, int female, string userCode, string password) {
            object[] results = this.Invoke("AddHRSummary", new object[] {
                        qualityAuditNo,
                        type,
                        category,
                        noFullEstablishment,
                        male,
                        female,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddHRSummaryAsync(string qualityAuditNo, int type, string category, int noFullEstablishment, int male, int female, string userCode, string password) {
            this.AddHRSummaryAsync(qualityAuditNo, type, category, noFullEstablishment, male, female, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddHRSummaryAsync(string qualityAuditNo, int type, string category, int noFullEstablishment, int male, int female, string userCode, string password, object userState) {
            if ((this.AddHRSummaryOperationCompleted == null)) {
                this.AddHRSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddHRSummaryOperationCompleted);
            }
            this.InvokeAsync("AddHRSummary", new object[] {
                        qualityAuditNo,
                        type,
                        category,
                        noFullEstablishment,
                        male,
                        female,
                        userCode,
                        password}, this.AddHRSummaryOperationCompleted, userState);
        }
        
        private void OnAddHRSummaryOperationCompleted(object arg) {
            if ((this.AddHRSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddHRSummaryCompleted(this, new AddHRSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddDevelopmentTraining", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddDevelopmentTraining_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDevelopmentTraining(string qualityAuditNo, string category, int year4Male, int year4Female, int year3Male, int year3Female, int year2Male, int year2Female, int year1Male, int year1Female, int currentYearMale, int currentYearFemale, string userCode, string password) {
            object[] results = this.Invoke("AddDevelopmentTraining", new object[] {
                        qualityAuditNo,
                        category,
                        year4Male,
                        year4Female,
                        year3Male,
                        year3Female,
                        year2Male,
                        year2Female,
                        year1Male,
                        year1Female,
                        currentYearMale,
                        currentYearFemale,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDevelopmentTrainingAsync(string qualityAuditNo, string category, int year4Male, int year4Female, int year3Male, int year3Female, int year2Male, int year2Female, int year1Male, int year1Female, int currentYearMale, int currentYearFemale, string userCode, string password) {
            this.AddDevelopmentTrainingAsync(qualityAuditNo, category, year4Male, year4Female, year3Male, year3Female, year2Male, year2Female, year1Male, year1Female, currentYearMale, currentYearFemale, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddDevelopmentTrainingAsync(string qualityAuditNo, string category, int year4Male, int year4Female, int year3Male, int year3Female, int year2Male, int year2Female, int year1Male, int year1Female, int currentYearMale, int currentYearFemale, string userCode, string password, object userState) {
            if ((this.AddDevelopmentTrainingOperationCompleted == null)) {
                this.AddDevelopmentTrainingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDevelopmentTrainingOperationCompleted);
            }
            this.InvokeAsync("AddDevelopmentTraining", new object[] {
                        qualityAuditNo,
                        category,
                        year4Male,
                        year4Female,
                        year3Male,
                        year3Female,
                        year2Male,
                        year2Female,
                        year1Male,
                        year1Female,
                        currentYearMale,
                        currentYearFemale,
                        userCode,
                        password}, this.AddDevelopmentTrainingOperationCompleted, userState);
        }
        
        private void OnAddDevelopmentTrainingOperationCompleted(object arg) {
            if ((this.AddDevelopmentTrainingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDevelopmentTrainingCompleted(this, new AddDevelopmentTrainingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddStudentDraft", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddStudentDraft_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddStudentDraft(
                    string idPassport, 
                    string admissionNo, 
                    string surname, 
                    string middleName, 
                    string firstName, 
                    int gender, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dob, 
                    string homeCounty, 
                    string ethnicBckground, 
                    string nationality, 
                    int sponsorship, 
                    int yearOfStudy, 
                    string disabilityDescription, 
                    string disabilityCode, 
                    string myProgram, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfAdmission, 
                    string campusCode, 
                    string userCode, 
                    string userPassword) {
            object[] results = this.Invoke("AddStudentDraft", new object[] {
                        idPassport,
                        admissionNo,
                        surname,
                        middleName,
                        firstName,
                        gender,
                        dob,
                        homeCounty,
                        ethnicBckground,
                        nationality,
                        sponsorship,
                        yearOfStudy,
                        disabilityDescription,
                        disabilityCode,
                        myProgram,
                        dateOfAdmission,
                        campusCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddStudentDraftAsync(
                    string idPassport, 
                    string admissionNo, 
                    string surname, 
                    string middleName, 
                    string firstName, 
                    int gender, 
                    System.DateTime dob, 
                    string homeCounty, 
                    string ethnicBckground, 
                    string nationality, 
                    int sponsorship, 
                    int yearOfStudy, 
                    string disabilityDescription, 
                    string disabilityCode, 
                    string myProgram, 
                    System.DateTime dateOfAdmission, 
                    string campusCode, 
                    string userCode, 
                    string userPassword) {
            this.AddStudentDraftAsync(idPassport, admissionNo, surname, middleName, firstName, gender, dob, homeCounty, ethnicBckground, nationality, sponsorship, yearOfStudy, disabilityDescription, disabilityCode, myProgram, dateOfAdmission, campusCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddStudentDraftAsync(
                    string idPassport, 
                    string admissionNo, 
                    string surname, 
                    string middleName, 
                    string firstName, 
                    int gender, 
                    System.DateTime dob, 
                    string homeCounty, 
                    string ethnicBckground, 
                    string nationality, 
                    int sponsorship, 
                    int yearOfStudy, 
                    string disabilityDescription, 
                    string disabilityCode, 
                    string myProgram, 
                    System.DateTime dateOfAdmission, 
                    string campusCode, 
                    string userCode, 
                    string userPassword, 
                    object userState) {
            if ((this.AddStudentDraftOperationCompleted == null)) {
                this.AddStudentDraftOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStudentDraftOperationCompleted);
            }
            this.InvokeAsync("AddStudentDraft", new object[] {
                        idPassport,
                        admissionNo,
                        surname,
                        middleName,
                        firstName,
                        gender,
                        dob,
                        homeCounty,
                        ethnicBckground,
                        nationality,
                        sponsorship,
                        yearOfStudy,
                        disabilityDescription,
                        disabilityCode,
                        myProgram,
                        dateOfAdmission,
                        campusCode,
                        userCode,
                        userPassword}, this.AddStudentDraftOperationCompleted, userState);
        }
        
        private void OnAddStudentDraftOperationCompleted(object arg) {
            if ((this.AddStudentDraftCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStudentDraftCompleted(this, new AddStudentDraftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:Approve", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="Approve_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool Approve(string category, string userId, string password, bool action) {
            object[] results = this.Invoke("Approve", new object[] {
                        category,
                        userId,
                        password,
                        action});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveAsync(string category, string userId, string password, bool action) {
            this.ApproveAsync(category, userId, password, action, null);
        }
        
        /// <remarks/>
        public void ApproveAsync(string category, string userId, string password, bool action, object userState) {
            if ((this.ApproveOperationCompleted == null)) {
                this.ApproveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveOperationCompleted);
            }
            this.InvokeAsync("Approve", new object[] {
                        category,
                        userId,
                        password,
                        action}, this.ApproveOperationCompleted, userState);
        }
        
        private void OnApproveOperationCompleted(object arg) {
            if ((this.ApproveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveCompleted(this, new ApproveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddAdminSpace", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddAdminSpace_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool AddAdminSpace(string category, decimal space, string campus) {
            object[] results = this.Invoke("AddAdminSpace", new object[] {
                        category,
                        space,
                        campus});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddAdminSpaceAsync(string category, decimal space, string campus) {
            this.AddAdminSpaceAsync(category, space, campus, null);
        }
        
        /// <remarks/>
        public void AddAdminSpaceAsync(string category, decimal space, string campus, object userState) {
            if ((this.AddAdminSpaceOperationCompleted == null)) {
                this.AddAdminSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAdminSpaceOperationCompleted);
            }
            this.InvokeAsync("AddAdminSpace", new object[] {
                        category,
                        space,
                        campus}, this.AddAdminSpaceOperationCompleted, userState);
        }
        
        private void OnAddAdminSpaceOperationCompleted(object arg) {
            if ((this.AddAdminSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAdminSpaceCompleted(this, new AddAdminSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:InstitutionSignup", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="InstitutionSignup_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InstitutionSignup(string proposedName, string kraPin, string proposedLocation, int sponsor, string county, string constituency, string postAddress, string postCode, string institutionWebsite, string phoneNumber, string emailAddress, string password, string confirmPassword) {
            object[] results = this.Invoke("InstitutionSignup", new object[] {
                        proposedName,
                        kraPin,
                        proposedLocation,
                        sponsor,
                        county,
                        constituency,
                        postAddress,
                        postCode,
                        institutionWebsite,
                        phoneNumber,
                        emailAddress,
                        password,
                        confirmPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InstitutionSignupAsync(string proposedName, string kraPin, string proposedLocation, int sponsor, string county, string constituency, string postAddress, string postCode, string institutionWebsite, string phoneNumber, string emailAddress, string password, string confirmPassword) {
            this.InstitutionSignupAsync(proposedName, kraPin, proposedLocation, sponsor, county, constituency, postAddress, postCode, institutionWebsite, phoneNumber, emailAddress, password, confirmPassword, null);
        }
        
        /// <remarks/>
        public void InstitutionSignupAsync(string proposedName, string kraPin, string proposedLocation, int sponsor, string county, string constituency, string postAddress, string postCode, string institutionWebsite, string phoneNumber, string emailAddress, string password, string confirmPassword, object userState) {
            if ((this.InstitutionSignupOperationCompleted == null)) {
                this.InstitutionSignupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInstitutionSignupOperationCompleted);
            }
            this.InvokeAsync("InstitutionSignup", new object[] {
                        proposedName,
                        kraPin,
                        proposedLocation,
                        sponsor,
                        county,
                        constituency,
                        postAddress,
                        postCode,
                        institutionWebsite,
                        phoneNumber,
                        emailAddress,
                        password,
                        confirmPassword}, this.InstitutionSignupOperationCompleted, userState);
        }
        
        private void OnInstitutionSignupOperationCompleted(object arg) {
            if ((this.InstitutionSignupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InstitutionSignupCompleted(this, new InstitutionSignupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ApplyForAccreditation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ApplyForAccreditation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApplyForAccreditation(string userCode, bool newUser, string accreditationType, string paymentReference, string proposedName, string kraPin, string proposedLocation, int sponsor, string county, string constituency, string postAddress, string postCode, string institutionWebsite, string phoneNumber, string emailAddress) {
            object[] results = this.Invoke("ApplyForAccreditation", new object[] {
                        userCode,
                        newUser,
                        accreditationType,
                        paymentReference,
                        proposedName,
                        kraPin,
                        proposedLocation,
                        sponsor,
                        county,
                        constituency,
                        postAddress,
                        postCode,
                        institutionWebsite,
                        phoneNumber,
                        emailAddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyForAccreditationAsync(string userCode, bool newUser, string accreditationType, string paymentReference, string proposedName, string kraPin, string proposedLocation, int sponsor, string county, string constituency, string postAddress, string postCode, string institutionWebsite, string phoneNumber, string emailAddress) {
            this.ApplyForAccreditationAsync(userCode, newUser, accreditationType, paymentReference, proposedName, kraPin, proposedLocation, sponsor, county, constituency, postAddress, postCode, institutionWebsite, phoneNumber, emailAddress, null);
        }
        
        /// <remarks/>
        public void ApplyForAccreditationAsync(
                    string userCode, 
                    bool newUser, 
                    string accreditationType, 
                    string paymentReference, 
                    string proposedName, 
                    string kraPin, 
                    string proposedLocation, 
                    int sponsor, 
                    string county, 
                    string constituency, 
                    string postAddress, 
                    string postCode, 
                    string institutionWebsite, 
                    string phoneNumber, 
                    string emailAddress, 
                    object userState) {
            if ((this.ApplyForAccreditationOperationCompleted == null)) {
                this.ApplyForAccreditationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyForAccreditationOperationCompleted);
            }
            this.InvokeAsync("ApplyForAccreditation", new object[] {
                        userCode,
                        newUser,
                        accreditationType,
                        paymentReference,
                        proposedName,
                        kraPin,
                        proposedLocation,
                        sponsor,
                        county,
                        constituency,
                        postAddress,
                        postCode,
                        institutionWebsite,
                        phoneNumber,
                        emailAddress}, this.ApplyForAccreditationOperationCompleted, userState);
        }
        
        private void OnApplyForAccreditationOperationCompleted(object arg) {
            if ((this.ApplyForAccreditationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyForAccreditationCompleted(this, new ApplyForAccreditationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:ApplyForProgramAccreditation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="ApplyForProgramAccreditation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ApplyForProgramAccreditation(string userCode, string campus, string programName, string programDomain, int programLevel, string paymentReference) {
            object[] results = this.Invoke("ApplyForProgramAccreditation", new object[] {
                        userCode,
                        campus,
                        programName,
                        programDomain,
                        programLevel,
                        paymentReference});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyForProgramAccreditationAsync(string userCode, string campus, string programName, string programDomain, int programLevel, string paymentReference) {
            this.ApplyForProgramAccreditationAsync(userCode, campus, programName, programDomain, programLevel, paymentReference, null);
        }
        
        /// <remarks/>
        public void ApplyForProgramAccreditationAsync(string userCode, string campus, string programName, string programDomain, int programLevel, string paymentReference, object userState) {
            if ((this.ApplyForProgramAccreditationOperationCompleted == null)) {
                this.ApplyForProgramAccreditationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyForProgramAccreditationOperationCompleted);
            }
            this.InvokeAsync("ApplyForProgramAccreditation", new object[] {
                        userCode,
                        campus,
                        programName,
                        programDomain,
                        programLevel,
                        paymentReference}, this.ApplyForProgramAccreditationOperationCompleted, userState);
        }
        
        private void OnApplyForProgramAccreditationOperationCompleted(object arg) {
            if ((this.ApplyForProgramAccreditationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyForProgramAccreditationCompleted(this, new ApplyForProgramAccreditationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddAcademicStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddAcademicStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddAcademicStaff(
                    string idNumber, 
                    string payrollNo, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    int gender, 
                    string ethnicBackground, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfBirth, 
                    string nationality, 
                    string homeCounty, 
                    string disabilityDescription, 
                    string disabilityRegistrationCode, 
                    string programDomain, 
                    string rankCode, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfFirstAppointment, 
                    int termsOfService, 
                    int highestAcademicQualification, 
                    string campus, 
                    string userName, 
                    string password) {
            object[] results = this.Invoke("AddAcademicStaff", new object[] {
                        idNumber,
                        payrollNo,
                        firstName,
                        middleName,
                        lastName,
                        gender,
                        ethnicBackground,
                        dateOfBirth,
                        nationality,
                        homeCounty,
                        disabilityDescription,
                        disabilityRegistrationCode,
                        programDomain,
                        rankCode,
                        dateOfFirstAppointment,
                        termsOfService,
                        highestAcademicQualification,
                        campus,
                        userName,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAcademicStaffAsync(
                    string idNumber, 
                    string payrollNo, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    int gender, 
                    string ethnicBackground, 
                    System.DateTime dateOfBirth, 
                    string nationality, 
                    string homeCounty, 
                    string disabilityDescription, 
                    string disabilityRegistrationCode, 
                    string programDomain, 
                    string rankCode, 
                    System.DateTime dateOfFirstAppointment, 
                    int termsOfService, 
                    int highestAcademicQualification, 
                    string campus, 
                    string userName, 
                    string password) {
            this.AddAcademicStaffAsync(idNumber, payrollNo, firstName, middleName, lastName, gender, ethnicBackground, dateOfBirth, nationality, homeCounty, disabilityDescription, disabilityRegistrationCode, programDomain, rankCode, dateOfFirstAppointment, termsOfService, highestAcademicQualification, campus, userName, password, null);
        }
        
        /// <remarks/>
        public void AddAcademicStaffAsync(
                    string idNumber, 
                    string payrollNo, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    int gender, 
                    string ethnicBackground, 
                    System.DateTime dateOfBirth, 
                    string nationality, 
                    string homeCounty, 
                    string disabilityDescription, 
                    string disabilityRegistrationCode, 
                    string programDomain, 
                    string rankCode, 
                    System.DateTime dateOfFirstAppointment, 
                    int termsOfService, 
                    int highestAcademicQualification, 
                    string campus, 
                    string userName, 
                    string password, 
                    object userState) {
            if ((this.AddAcademicStaffOperationCompleted == null)) {
                this.AddAcademicStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAcademicStaffOperationCompleted);
            }
            this.InvokeAsync("AddAcademicStaff", new object[] {
                        idNumber,
                        payrollNo,
                        firstName,
                        middleName,
                        lastName,
                        gender,
                        ethnicBackground,
                        dateOfBirth,
                        nationality,
                        homeCounty,
                        disabilityDescription,
                        disabilityRegistrationCode,
                        programDomain,
                        rankCode,
                        dateOfFirstAppointment,
                        termsOfService,
                        highestAcademicQualification,
                        campus,
                        userName,
                        password}, this.AddAcademicStaffOperationCompleted, userState);
        }
        
        private void OnAddAcademicStaffOperationCompleted(object arg) {
            if ((this.AddAcademicStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAcademicStaffCompleted(this, new AddAcademicStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteAcademicStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteAcademicStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteAcademicStaff(string idNo, string payrollNo, string user, string password) {
            object[] results = this.Invoke("DeleteAcademicStaff", new object[] {
                        idNo,
                        payrollNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAcademicStaffAsync(string idNo, string payrollNo, string user, string password) {
            this.DeleteAcademicStaffAsync(idNo, payrollNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteAcademicStaffAsync(string idNo, string payrollNo, string user, string password, object userState) {
            if ((this.DeleteAcademicStaffOperationCompleted == null)) {
                this.DeleteAcademicStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAcademicStaffOperationCompleted);
            }
            this.InvokeAsync("DeleteAcademicStaff", new object[] {
                        idNo,
                        payrollNo,
                        user,
                        password}, this.DeleteAcademicStaffOperationCompleted, userState);
        }
        
        private void OnDeleteAcademicStaffOperationCompleted(object arg) {
            if ((this.DeleteAcademicStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAcademicStaffCompleted(this, new DeleteAcademicStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddNonAcademicStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddNonAcademicStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddNonAcademicStaff(string idNo, string payrollNo, string surname, string middleName, string firstName, int gender, string ethnicBackground, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfBirth, string nationality, string homeCounty, string disabilityDescription, string disabilityRegistration, string campus, string userCode, string password) {
            object[] results = this.Invoke("AddNonAcademicStaff", new object[] {
                        idNo,
                        payrollNo,
                        surname,
                        middleName,
                        firstName,
                        gender,
                        ethnicBackground,
                        dateOfBirth,
                        nationality,
                        homeCounty,
                        disabilityDescription,
                        disabilityRegistration,
                        campus,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddNonAcademicStaffAsync(string idNo, string payrollNo, string surname, string middleName, string firstName, int gender, string ethnicBackground, System.DateTime dateOfBirth, string nationality, string homeCounty, string disabilityDescription, string disabilityRegistration, string campus, string userCode, string password) {
            this.AddNonAcademicStaffAsync(idNo, payrollNo, surname, middleName, firstName, gender, ethnicBackground, dateOfBirth, nationality, homeCounty, disabilityDescription, disabilityRegistration, campus, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddNonAcademicStaffAsync(
                    string idNo, 
                    string payrollNo, 
                    string surname, 
                    string middleName, 
                    string firstName, 
                    int gender, 
                    string ethnicBackground, 
                    System.DateTime dateOfBirth, 
                    string nationality, 
                    string homeCounty, 
                    string disabilityDescription, 
                    string disabilityRegistration, 
                    string campus, 
                    string userCode, 
                    string password, 
                    object userState) {
            if ((this.AddNonAcademicStaffOperationCompleted == null)) {
                this.AddNonAcademicStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNonAcademicStaffOperationCompleted);
            }
            this.InvokeAsync("AddNonAcademicStaff", new object[] {
                        idNo,
                        payrollNo,
                        surname,
                        middleName,
                        firstName,
                        gender,
                        ethnicBackground,
                        dateOfBirth,
                        nationality,
                        homeCounty,
                        disabilityDescription,
                        disabilityRegistration,
                        campus,
                        userCode,
                        password}, this.AddNonAcademicStaffOperationCompleted, userState);
        }
        
        private void OnAddNonAcademicStaffOperationCompleted(object arg) {
            if ((this.AddNonAcademicStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNonAcademicStaffCompleted(this, new AddNonAcademicStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteNonAcademicStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteNonAcademicStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteNonAcademicStaff(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteNonAcademicStaff", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteNonAcademicStaffAsync(int entryNo, string user, string password) {
            this.DeleteNonAcademicStaffAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteNonAcademicStaffAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteNonAcademicStaffOperationCompleted == null)) {
                this.DeleteNonAcademicStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteNonAcademicStaffOperationCompleted);
            }
            this.InvokeAsync("DeleteNonAcademicStaff", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteNonAcademicStaffOperationCompleted, userState);
        }
        
        private void OnDeleteNonAcademicStaffOperationCompleted(object arg) {
            if ((this.DeleteNonAcademicStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteNonAcademicStaffCompleted(this, new DeleteNonAcademicStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddDisciplineCase", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddDisciplineCase_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDisciplineCase(string studentId, string admissionNo, string firstName, string middleName, string lastName, string caseDescription, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime caseDate, string verdict, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime verdictDate, string userCode, string password) {
            object[] results = this.Invoke("AddDisciplineCase", new object[] {
                        studentId,
                        admissionNo,
                        firstName,
                        middleName,
                        lastName,
                        caseDescription,
                        caseDate,
                        verdict,
                        verdictDate,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDisciplineCaseAsync(string studentId, string admissionNo, string firstName, string middleName, string lastName, string caseDescription, System.DateTime caseDate, string verdict, System.DateTime verdictDate, string userCode, string password) {
            this.AddDisciplineCaseAsync(studentId, admissionNo, firstName, middleName, lastName, caseDescription, caseDate, verdict, verdictDate, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddDisciplineCaseAsync(string studentId, string admissionNo, string firstName, string middleName, string lastName, string caseDescription, System.DateTime caseDate, string verdict, System.DateTime verdictDate, string userCode, string password, object userState) {
            if ((this.AddDisciplineCaseOperationCompleted == null)) {
                this.AddDisciplineCaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDisciplineCaseOperationCompleted);
            }
            this.InvokeAsync("AddDisciplineCase", new object[] {
                        studentId,
                        admissionNo,
                        firstName,
                        middleName,
                        lastName,
                        caseDescription,
                        caseDate,
                        verdict,
                        verdictDate,
                        userCode,
                        password}, this.AddDisciplineCaseOperationCompleted, userState);
        }
        
        private void OnAddDisciplineCaseOperationCompleted(object arg) {
            if ((this.AddDisciplineCaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDisciplineCaseCompleted(this, new AddDisciplineCaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditDisciplineCase", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditDisciplineCase_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool EditDisciplineCase(int caseId, string studentId, string caseDescription, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime caseDate, string verdict, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime verdictDate, string userCode, string password) {
            object[] results = this.Invoke("EditDisciplineCase", new object[] {
                        caseId,
                        studentId,
                        caseDescription,
                        caseDate,
                        verdict,
                        verdictDate,
                        userCode,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EditDisciplineCaseAsync(int caseId, string studentId, string caseDescription, System.DateTime caseDate, string verdict, System.DateTime verdictDate, string userCode, string password) {
            this.EditDisciplineCaseAsync(caseId, studentId, caseDescription, caseDate, verdict, verdictDate, userCode, password, null);
        }
        
        /// <remarks/>
        public void EditDisciplineCaseAsync(int caseId, string studentId, string caseDescription, System.DateTime caseDate, string verdict, System.DateTime verdictDate, string userCode, string password, object userState) {
            if ((this.EditDisciplineCaseOperationCompleted == null)) {
                this.EditDisciplineCaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditDisciplineCaseOperationCompleted);
            }
            this.InvokeAsync("EditDisciplineCase", new object[] {
                        caseId,
                        studentId,
                        caseDescription,
                        caseDate,
                        verdict,
                        verdictDate,
                        userCode,
                        password}, this.EditDisciplineCaseOperationCompleted, userState);
        }
        
        private void OnEditDisciplineCaseOperationCompleted(object arg) {
            if ((this.EditDisciplineCaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditDisciplineCaseCompleted(this, new EditDisciplineCaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteDisciplineCase", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteDisciplineCase_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool DeleteDisciplineCase(int entryNo, string user, string password) {
            object[] results = this.Invoke("DeleteDisciplineCase", new object[] {
                        entryNo,
                        user,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDisciplineCaseAsync(int entryNo, string user, string password) {
            this.DeleteDisciplineCaseAsync(entryNo, user, password, null);
        }
        
        /// <remarks/>
        public void DeleteDisciplineCaseAsync(int entryNo, string user, string password, object userState) {
            if ((this.DeleteDisciplineCaseOperationCompleted == null)) {
                this.DeleteDisciplineCaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDisciplineCaseOperationCompleted);
            }
            this.InvokeAsync("DeleteDisciplineCase", new object[] {
                        entryNo,
                        user,
                        password}, this.DeleteDisciplineCaseOperationCompleted, userState);
        }
        
        private void OnDeleteDisciplineCaseOperationCompleted(object arg) {
            if ((this.DeleteDisciplineCaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDisciplineCaseCompleted(this, new DeleteDisciplineCaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddFinancialSubmission", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddFinancialSubmission_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddFinancialSubmission(string voteHead, decimal amount, string userCode, string password) {
            object[] results = this.Invoke("AddFinancialSubmission", new object[] {
                        voteHead,
                        amount,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddFinancialSubmissionAsync(string voteHead, decimal amount, string userCode, string password) {
            this.AddFinancialSubmissionAsync(voteHead, amount, userCode, password, null);
        }
        
        /// <remarks/>
        public void AddFinancialSubmissionAsync(string voteHead, decimal amount, string userCode, string password, object userState) {
            if ((this.AddFinancialSubmissionOperationCompleted == null)) {
                this.AddFinancialSubmissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFinancialSubmissionOperationCompleted);
            }
            this.InvokeAsync("AddFinancialSubmission", new object[] {
                        voteHead,
                        amount,
                        userCode,
                        password}, this.AddFinancialSubmissionOperationCompleted, userState);
        }
        
        private void OnAddFinancialSubmissionOperationCompleted(object arg) {
            if ((this.AddFinancialSubmissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFinancialSubmissionCompleted(this, new AddFinancialSubmissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteFinancialSubmission", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteFinancialSubmission_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteFinancialSubmission(string voteHead, string userCode, string password) {
            object[] results = this.Invoke("DeleteFinancialSubmission", new object[] {
                        voteHead,
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFinancialSubmissionAsync(string voteHead, string userCode, string password) {
            this.DeleteFinancialSubmissionAsync(voteHead, userCode, password, null);
        }
        
        /// <remarks/>
        public void DeleteFinancialSubmissionAsync(string voteHead, string userCode, string password, object userState) {
            if ((this.DeleteFinancialSubmissionOperationCompleted == null)) {
                this.DeleteFinancialSubmissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFinancialSubmissionOperationCompleted);
            }
            this.InvokeAsync("DeleteFinancialSubmission", new object[] {
                        voteHead,
                        userCode,
                        password}, this.DeleteFinancialSubmissionOperationCompleted, userState);
        }
        
        private void OnDeleteFinancialSubmissionOperationCompleted(object arg) {
            if ((this.DeleteFinancialSubmissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFinancialSubmissionCompleted(this, new DeleteFinancialSubmissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddResearch", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddResearch_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddResearch(int category, string domain, string subdomain, string campus, int publicationType, string title, string description, string link, string patentingOrganisation, string patentNo, int patentYear, string authorIds, string userName, string password) {
            object[] results = this.Invoke("AddResearch", new object[] {
                        category,
                        domain,
                        subdomain,
                        campus,
                        publicationType,
                        title,
                        description,
                        link,
                        patentingOrganisation,
                        patentNo,
                        patentYear,
                        authorIds,
                        userName,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddResearchAsync(int category, string domain, string subdomain, string campus, int publicationType, string title, string description, string link, string patentingOrganisation, string patentNo, int patentYear, string authorIds, string userName, string password) {
            this.AddResearchAsync(category, domain, subdomain, campus, publicationType, title, description, link, patentingOrganisation, patentNo, patentYear, authorIds, userName, password, null);
        }
        
        /// <remarks/>
        public void AddResearchAsync(int category, string domain, string subdomain, string campus, int publicationType, string title, string description, string link, string patentingOrganisation, string patentNo, int patentYear, string authorIds, string userName, string password, object userState) {
            if ((this.AddResearchOperationCompleted == null)) {
                this.AddResearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddResearchOperationCompleted);
            }
            this.InvokeAsync("AddResearch", new object[] {
                        category,
                        domain,
                        subdomain,
                        campus,
                        publicationType,
                        title,
                        description,
                        link,
                        patentingOrganisation,
                        patentNo,
                        patentYear,
                        authorIds,
                        userName,
                        password}, this.AddResearchOperationCompleted, userState);
        }
        
        private void OnAddResearchOperationCompleted(object arg) {
            if ((this.AddResearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddResearchCompleted(this, new AddResearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditResearch", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditResearch_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EditResearch() {
            this.Invoke("EditResearch", new object[0]);
        }
        
        /// <remarks/>
        public void EditResearchAsync() {
            this.EditResearchAsync(null);
        }
        
        /// <remarks/>
        public void EditResearchAsync(object userState) {
            if ((this.EditResearchOperationCompleted == null)) {
                this.EditResearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditResearchOperationCompleted);
            }
            this.InvokeAsync("EditResearch", new object[0], this.EditResearchOperationCompleted, userState);
        }
        
        private void OnEditResearchOperationCompleted(object arg) {
            if ((this.EditResearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditResearchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteResearch", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteResearch_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteResearch() {
            this.Invoke("DeleteResearch", new object[0]);
        }
        
        /// <remarks/>
        public void DeleteResearchAsync() {
            this.DeleteResearchAsync(null);
        }
        
        /// <remarks/>
        public void DeleteResearchAsync(object userState) {
            if ((this.DeleteResearchOperationCompleted == null)) {
                this.DeleteResearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteResearchOperationCompleted);
            }
            this.InvokeAsync("DeleteResearch", new object[0], this.DeleteResearchOperationCompleted, userState);
        }
        
        private void OnDeleteResearchOperationCompleted(object arg) {
            if ((this.DeleteResearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteResearchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:RegisterPeerReviewer", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="RegisterPeerReviewer_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RegisterPeerReviewer(string name, string idNo, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string password, string confirmPassword, string highestAcademicQualification, string title) {
            object[] results = this.Invoke("RegisterPeerReviewer", new object[] {
                        name,
                        idNo,
                        phoneNumber,
                        emailAddress,
                        kraPin,
                        postAddress,
                        postCode,
                        password,
                        confirmPassword,
                        highestAcademicQualification,
                        title});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterPeerReviewerAsync(string name, string idNo, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string password, string confirmPassword, string highestAcademicQualification, string title) {
            this.RegisterPeerReviewerAsync(name, idNo, phoneNumber, emailAddress, kraPin, postAddress, postCode, password, confirmPassword, highestAcademicQualification, title, null);
        }
        
        /// <remarks/>
        public void RegisterPeerReviewerAsync(string name, string idNo, string phoneNumber, string emailAddress, string kraPin, string postAddress, string postCode, string password, string confirmPassword, string highestAcademicQualification, string title, object userState) {
            if ((this.RegisterPeerReviewerOperationCompleted == null)) {
                this.RegisterPeerReviewerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterPeerReviewerOperationCompleted);
            }
            this.InvokeAsync("RegisterPeerReviewer", new object[] {
                        name,
                        idNo,
                        phoneNumber,
                        emailAddress,
                        kraPin,
                        postAddress,
                        postCode,
                        password,
                        confirmPassword,
                        highestAcademicQualification,
                        title}, this.RegisterPeerReviewerOperationCompleted, userState);
        }
        
        private void OnRegisterPeerReviewerOperationCompleted(object arg) {
            if ((this.RegisterPeerReviewerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterPeerReviewerCompleted(this, new RegisterPeerReviewerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:UpdatePeerReviewerPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="UpdatePeerReviewerPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdatePeerReviewerPassword(string vendorNumber, string currentPassword, string newPassword, string confirmPassword) {
            object[] results = this.Invoke("UpdatePeerReviewerPassword", new object[] {
                        vendorNumber,
                        currentPassword,
                        newPassword,
                        confirmPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePeerReviewerPasswordAsync(string vendorNumber, string currentPassword, string newPassword, string confirmPassword) {
            this.UpdatePeerReviewerPasswordAsync(vendorNumber, currentPassword, newPassword, confirmPassword, null);
        }
        
        /// <remarks/>
        public void UpdatePeerReviewerPasswordAsync(string vendorNumber, string currentPassword, string newPassword, string confirmPassword, object userState) {
            if ((this.UpdatePeerReviewerPasswordOperationCompleted == null)) {
                this.UpdatePeerReviewerPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePeerReviewerPasswordOperationCompleted);
            }
            this.InvokeAsync("UpdatePeerReviewerPassword", new object[] {
                        vendorNumber,
                        currentPassword,
                        newPassword,
                        confirmPassword}, this.UpdatePeerReviewerPasswordOperationCompleted, userState);
        }
        
        private void OnUpdatePeerReviewerPasswordOperationCompleted(object arg) {
            if ((this.UpdatePeerReviewerPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePeerReviewerPasswordCompleted(this, new UpdatePeerReviewerPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddPeerAcademicQualifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddPeerAcademicQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddPeerAcademicQualifications(string vendorNo, string password, string description, int yearObtained, string institution, string areaOfSpecialization, int durationOfStudy) {
            object[] results = this.Invoke("AddPeerAcademicQualifications", new object[] {
                        vendorNo,
                        password,
                        description,
                        yearObtained,
                        institution,
                        areaOfSpecialization,
                        durationOfStudy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPeerAcademicQualificationsAsync(string vendorNo, string password, string description, int yearObtained, string institution, string areaOfSpecialization, int durationOfStudy) {
            this.AddPeerAcademicQualificationsAsync(vendorNo, password, description, yearObtained, institution, areaOfSpecialization, durationOfStudy, null);
        }
        
        /// <remarks/>
        public void AddPeerAcademicQualificationsAsync(string vendorNo, string password, string description, int yearObtained, string institution, string areaOfSpecialization, int durationOfStudy, object userState) {
            if ((this.AddPeerAcademicQualificationsOperationCompleted == null)) {
                this.AddPeerAcademicQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPeerAcademicQualificationsOperationCompleted);
            }
            this.InvokeAsync("AddPeerAcademicQualifications", new object[] {
                        vendorNo,
                        password,
                        description,
                        yearObtained,
                        institution,
                        areaOfSpecialization,
                        durationOfStudy}, this.AddPeerAcademicQualificationsOperationCompleted, userState);
        }
        
        private void OnAddPeerAcademicQualificationsOperationCompleted(object arg) {
            if ((this.AddPeerAcademicQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPeerAcademicQualificationsCompleted(this, new AddPeerAcademicQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddPeerEmploymentRecord", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddPeerEmploymentRecord_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddPeerEmploymentRecord(string vendorNo, string password, string employer, string postion, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateFrom, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateTo, string contactPerson) {
            object[] results = this.Invoke("AddPeerEmploymentRecord", new object[] {
                        vendorNo,
                        password,
                        employer,
                        postion,
                        dateFrom,
                        dateTo,
                        contactPerson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPeerEmploymentRecordAsync(string vendorNo, string password, string employer, string postion, System.DateTime dateFrom, System.DateTime dateTo, string contactPerson) {
            this.AddPeerEmploymentRecordAsync(vendorNo, password, employer, postion, dateFrom, dateTo, contactPerson, null);
        }
        
        /// <remarks/>
        public void AddPeerEmploymentRecordAsync(string vendorNo, string password, string employer, string postion, System.DateTime dateFrom, System.DateTime dateTo, string contactPerson, object userState) {
            if ((this.AddPeerEmploymentRecordOperationCompleted == null)) {
                this.AddPeerEmploymentRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPeerEmploymentRecordOperationCompleted);
            }
            this.InvokeAsync("AddPeerEmploymentRecord", new object[] {
                        vendorNo,
                        password,
                        employer,
                        postion,
                        dateFrom,
                        dateTo,
                        contactPerson}, this.AddPeerEmploymentRecordOperationCompleted, userState);
        }
        
        private void OnAddPeerEmploymentRecordOperationCompleted(object arg) {
            if ((this.AddPeerEmploymentRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPeerEmploymentRecordCompleted(this, new AddPeerEmploymentRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:GetInstitutionNumber", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="GetInstitutionNumber_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetInstitutionNumber(string userCode, string password) {
            object[] results = this.Invoke("GetInstitutionNumber", new object[] {
                        userCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInstitutionNumberAsync(string userCode, string password) {
            this.GetInstitutionNumberAsync(userCode, password, null);
        }
        
        /// <remarks/>
        public void GetInstitutionNumberAsync(string userCode, string password, object userState) {
            if ((this.GetInstitutionNumberOperationCompleted == null)) {
                this.GetInstitutionNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstitutionNumberOperationCompleted);
            }
            this.InvokeAsync("GetInstitutionNumber", new object[] {
                        userCode,
                        password}, this.GetInstitutionNumberOperationCompleted, userState);
        }
        
        private void OnGetInstitutionNumberOperationCompleted(object arg) {
            if ((this.GetInstitutionNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstitutionNumberCompleted(this, new GetInstitutionNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddLand", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddLand_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddLand(string campus, int ownershipStatus, decimal landSize, string lRNumber, string userCode, string userPassword) {
            object[] results = this.Invoke("AddLand", new object[] {
                        campus,
                        ownershipStatus,
                        landSize,
                        lRNumber,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLandAsync(string campus, int ownershipStatus, decimal landSize, string lRNumber, string userCode, string userPassword) {
            this.AddLandAsync(campus, ownershipStatus, landSize, lRNumber, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void AddLandAsync(string campus, int ownershipStatus, decimal landSize, string lRNumber, string userCode, string userPassword, object userState) {
            if ((this.AddLandOperationCompleted == null)) {
                this.AddLandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLandOperationCompleted);
            }
            this.InvokeAsync("AddLand", new object[] {
                        campus,
                        ownershipStatus,
                        landSize,
                        lRNumber,
                        userCode,
                        userPassword}, this.AddLandOperationCompleted, userState);
        }
        
        private void OnAddLandOperationCompleted(object arg) {
            if ((this.AddLandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLandCompleted(this, new AddLandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteLand", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteLand_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteLand(int landCode, string userCode, string userPassword) {
            object[] results = this.Invoke("DeleteLand", new object[] {
                        landCode,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLandAsync(int landCode, string userCode, string userPassword) {
            this.DeleteLandAsync(landCode, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void DeleteLandAsync(int landCode, string userCode, string userPassword, object userState) {
            if ((this.DeleteLandOperationCompleted == null)) {
                this.DeleteLandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLandOperationCompleted);
            }
            this.InvokeAsync("DeleteLand", new object[] {
                        landCode,
                        userCode,
                        userPassword}, this.DeleteLandOperationCompleted, userState);
        }
        
        private void OnDeleteLandOperationCompleted(object arg) {
            if ((this.DeleteLandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLandCompleted(this, new DeleteLandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditLand", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditLand_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditLand(int landCode, string campus, int ownershipStatus, decimal landSize, string lRNumber, string userCode, string userPassword) {
            object[] results = this.Invoke("EditLand", new object[] {
                        landCode,
                        campus,
                        ownershipStatus,
                        landSize,
                        lRNumber,
                        userCode,
                        userPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditLandAsync(int landCode, string campus, int ownershipStatus, decimal landSize, string lRNumber, string userCode, string userPassword) {
            this.EditLandAsync(landCode, campus, ownershipStatus, landSize, lRNumber, userCode, userPassword, null);
        }
        
        /// <remarks/>
        public void EditLandAsync(int landCode, string campus, int ownershipStatus, decimal landSize, string lRNumber, string userCode, string userPassword, object userState) {
            if ((this.EditLandOperationCompleted == null)) {
                this.EditLandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditLandOperationCompleted);
            }
            this.InvokeAsync("EditLand", new object[] {
                        landCode,
                        campus,
                        ownershipStatus,
                        landSize,
                        lRNumber,
                        userCode,
                        userPassword}, this.EditLandOperationCompleted, userState);
        }
        
        private void OnEditLandOperationCompleted(object arg) {
            if ((this.EditLandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditLandCompleted(this, new EditLandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditGeneralDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditGeneralDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditGeneralDetails(string universityCode, int statusCategory, int institutionSponsor, string institutionEmailAddress, string institutionPhoneNumber, string institutionPostAddress, string institutionPostCode, string mainCampusCounty, string mainCampusConstituency, string mainCampusTown) {
            object[] results = this.Invoke("EditGeneralDetails", new object[] {
                        universityCode,
                        statusCategory,
                        institutionSponsor,
                        institutionEmailAddress,
                        institutionPhoneNumber,
                        institutionPostAddress,
                        institutionPostCode,
                        mainCampusCounty,
                        mainCampusConstituency,
                        mainCampusTown});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditGeneralDetailsAsync(string universityCode, int statusCategory, int institutionSponsor, string institutionEmailAddress, string institutionPhoneNumber, string institutionPostAddress, string institutionPostCode, string mainCampusCounty, string mainCampusConstituency, string mainCampusTown) {
            this.EditGeneralDetailsAsync(universityCode, statusCategory, institutionSponsor, institutionEmailAddress, institutionPhoneNumber, institutionPostAddress, institutionPostCode, mainCampusCounty, mainCampusConstituency, mainCampusTown, null);
        }
        
        /// <remarks/>
        public void EditGeneralDetailsAsync(string universityCode, int statusCategory, int institutionSponsor, string institutionEmailAddress, string institutionPhoneNumber, string institutionPostAddress, string institutionPostCode, string mainCampusCounty, string mainCampusConstituency, string mainCampusTown, object userState) {
            if ((this.EditGeneralDetailsOperationCompleted == null)) {
                this.EditGeneralDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditGeneralDetailsOperationCompleted);
            }
            this.InvokeAsync("EditGeneralDetails", new object[] {
                        universityCode,
                        statusCategory,
                        institutionSponsor,
                        institutionEmailAddress,
                        institutionPhoneNumber,
                        institutionPostAddress,
                        institutionPostCode,
                        mainCampusCounty,
                        mainCampusConstituency,
                        mainCampusTown}, this.EditGeneralDetailsOperationCompleted, userState);
        }
        
        private void OnEditGeneralDetailsOperationCompleted(object arg) {
            if ((this.EditGeneralDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditGeneralDetailsCompleted(this, new EditGeneralDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:EditVCDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="EditVCDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditVCDetails(string universityCode, string vcName, int vcHighestAcademicLevel, string vcDomainOfSpecialization, string vcOfficialEmail, string vcOfficialPhone) {
            object[] results = this.Invoke("EditVCDetails", new object[] {
                        universityCode,
                        vcName,
                        vcHighestAcademicLevel,
                        vcDomainOfSpecialization,
                        vcOfficialEmail,
                        vcOfficialPhone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditVCDetailsAsync(string universityCode, string vcName, int vcHighestAcademicLevel, string vcDomainOfSpecialization, string vcOfficialEmail, string vcOfficialPhone) {
            this.EditVCDetailsAsync(universityCode, vcName, vcHighestAcademicLevel, vcDomainOfSpecialization, vcOfficialEmail, vcOfficialPhone, null);
        }
        
        /// <remarks/>
        public void EditVCDetailsAsync(string universityCode, string vcName, int vcHighestAcademicLevel, string vcDomainOfSpecialization, string vcOfficialEmail, string vcOfficialPhone, object userState) {
            if ((this.EditVCDetailsOperationCompleted == null)) {
                this.EditVCDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditVCDetailsOperationCompleted);
            }
            this.InvokeAsync("EditVCDetails", new object[] {
                        universityCode,
                        vcName,
                        vcHighestAcademicLevel,
                        vcDomainOfSpecialization,
                        vcOfficialEmail,
                        vcOfficialPhone}, this.EditVCDetailsOperationCompleted, userState);
        }
        
        private void OnEditVCDetailsOperationCompleted(object arg) {
            if ((this.EditVCDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditVCDetailsCompleted(this, new EditVCDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:AddLibraryStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="AddLibraryStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddLibraryStaff(string username, string password, string idNo, string firstName, string middleName, string lastName, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dob, string position, int highestAcademicQualification, string campusCode) {
            object[] results = this.Invoke("AddLibraryStaff", new object[] {
                        username,
                        password,
                        idNo,
                        firstName,
                        middleName,
                        lastName,
                        dob,
                        position,
                        highestAcademicQualification,
                        campusCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLibraryStaffAsync(string username, string password, string idNo, string firstName, string middleName, string lastName, System.DateTime dob, string position, int highestAcademicQualification, string campusCode) {
            this.AddLibraryStaffAsync(username, password, idNo, firstName, middleName, lastName, dob, position, highestAcademicQualification, campusCode, null);
        }
        
        /// <remarks/>
        public void AddLibraryStaffAsync(string username, string password, string idNo, string firstName, string middleName, string lastName, System.DateTime dob, string position, int highestAcademicQualification, string campusCode, object userState) {
            if ((this.AddLibraryStaffOperationCompleted == null)) {
                this.AddLibraryStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLibraryStaffOperationCompleted);
            }
            this.InvokeAsync("AddLibraryStaff", new object[] {
                        username,
                        password,
                        idNo,
                        firstName,
                        middleName,
                        lastName,
                        dob,
                        position,
                        highestAcademicQualification,
                        campusCode}, this.AddLibraryStaffOperationCompleted, userState);
        }
        
        private void OnAddLibraryStaffOperationCompleted(object arg) {
            if ((this.AddLibraryStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLibraryStaffCompleted(this, new AddLibraryStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CuePortal:DeleteLibraryStaff", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", ResponseElementName="DeleteLibraryStaff_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CuePortal", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteLibraryStaff(string universityCode, string staffId) {
            object[] results = this.Invoke("DeleteLibraryStaff", new object[] {
                        universityCode,
                        staffId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLibraryStaffAsync(string universityCode, string staffId) {
            this.DeleteLibraryStaffAsync(universityCode, staffId, null);
        }
        
        /// <remarks/>
        public void DeleteLibraryStaffAsync(string universityCode, string staffId, object userState) {
            if ((this.DeleteLibraryStaffOperationCompleted == null)) {
                this.DeleteLibraryStaffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLibraryStaffOperationCompleted);
            }
            this.InvokeAsync("DeleteLibraryStaff", new object[] {
                        universityCode,
                        staffId}, this.DeleteLibraryStaffOperationCompleted, userState);
        }
        
        private void OnDeleteLibraryStaffOperationCompleted(object arg) {
            if ((this.DeleteLibraryStaffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLibraryStaffCompleted(this, new DeleteLibraryStaffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteStudentCompletedEventHandler(object sender, DeleteStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddGraduationCompletedEventHandler(object sender, AddGraduationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGraduationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGraduationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendApprovalRequestCompletedEventHandler(object sender, SendApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ApproveRejectRequestCompletedEventHandler(object sender, ApproveRejectRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveRejectRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveRejectRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CancelApprovalRequestCompletedEventHandler(object sender, CancelApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddBuildingCompletedEventHandler(object sender, AddBuildingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBuildingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBuildingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AccreditationGeneralDetailsCompletedEventHandler(object sender, AccreditationGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccreditationGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccreditationGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddProgramRationaleCompletedEventHandler(object sender, AddProgramRationaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProgramRationaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProgramRationaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditProgramRationaleCompletedEventHandler(object sender, EditProgramRationaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditProgramRationaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditProgramRationaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteProgramRationaleCompletedEventHandler(object sender, DeleteProgramRationaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProgramRationaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProgramRationaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddLearningOutcomeCompletedEventHandler(object sender, AddLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditLearningOutcomeCompletedEventHandler(object sender, EditLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteLearningOutcomeCompletedEventHandler(object sender, DeleteLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddDeliveryModeCompletedEventHandler(object sender, AddDeliveryModeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDeliveryModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDeliveryModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteDeliveryModeCompletedEventHandler(object sender, DeleteDeliveryModeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDeliveryModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDeliveryModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddGradingSystemCompletedEventHandler(object sender, AddGradingSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGradingSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGradingSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditGradingSystemCompletedEventHandler(object sender, EditGradingSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditGradingSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditGradingSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteGradingSystemCompletedEventHandler(object sender, DeleteGradingSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGradingSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGradingSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddUnitCompletedEventHandler(object sender, AddUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddInstructionalMethodCompletedEventHandler(object sender, AddInstructionalMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddInstructionalMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddInstructionalMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddCourseLearningOutcomeCompletedEventHandler(object sender, AddCourseLearningOutcomeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCourseLearningOutcomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCourseLearningOutcomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddBookCompletedEventHandler(object sender, AddBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void FngeneratecodesCompletedEventHandler(object sender, FngeneratecodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FngeneratecodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FngeneratecodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddKnownStakeHolderCompletedEventHandler(object sender, AddKnownStakeHolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddKnownStakeHolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddKnownStakeHolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddStrengthOrWeaknessCompletedEventHandler(object sender, AddStrengthOrWeaknessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStrengthOrWeaknessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStrengthOrWeaknessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddSARCommitteesCompositionCompletedEventHandler(object sender, AddSARCommitteesCompositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSARCommitteesCompositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSARCommitteesCompositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddTrusteeSenateCompositionCompletedEventHandler(object sender, AddTrusteeSenateCompositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTrusteeSenateCompositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTrusteeSenateCompositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddHRSummaryCompletedEventHandler(object sender, AddHRSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddHRSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddHRSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddDevelopmentTrainingCompletedEventHandler(object sender, AddDevelopmentTrainingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDevelopmentTrainingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDevelopmentTrainingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddStudentDraftCompletedEventHandler(object sender, AddStudentDraftCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStudentDraftCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStudentDraftCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ApproveCompletedEventHandler(object sender, ApproveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddAdminSpaceCompletedEventHandler(object sender, AddAdminSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAdminSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAdminSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InstitutionSignupCompletedEventHandler(object sender, InstitutionSignupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstitutionSignupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InstitutionSignupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ApplyForAccreditationCompletedEventHandler(object sender, ApplyForAccreditationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyForAccreditationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyForAccreditationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ApplyForProgramAccreditationCompletedEventHandler(object sender, ApplyForProgramAccreditationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyForProgramAccreditationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyForProgramAccreditationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddAcademicStaffCompletedEventHandler(object sender, AddAcademicStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAcademicStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAcademicStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteAcademicStaffCompletedEventHandler(object sender, DeleteAcademicStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAcademicStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAcademicStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddNonAcademicStaffCompletedEventHandler(object sender, AddNonAcademicStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNonAcademicStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNonAcademicStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteNonAcademicStaffCompletedEventHandler(object sender, DeleteNonAcademicStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteNonAcademicStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteNonAcademicStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddDisciplineCaseCompletedEventHandler(object sender, AddDisciplineCaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDisciplineCaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDisciplineCaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditDisciplineCaseCompletedEventHandler(object sender, EditDisciplineCaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditDisciplineCaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditDisciplineCaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteDisciplineCaseCompletedEventHandler(object sender, DeleteDisciplineCaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDisciplineCaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDisciplineCaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddFinancialSubmissionCompletedEventHandler(object sender, AddFinancialSubmissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFinancialSubmissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFinancialSubmissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteFinancialSubmissionCompletedEventHandler(object sender, DeleteFinancialSubmissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFinancialSubmissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFinancialSubmissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddResearchCompletedEventHandler(object sender, AddResearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddResearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddResearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditResearchCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteResearchCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RegisterPeerReviewerCompletedEventHandler(object sender, RegisterPeerReviewerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterPeerReviewerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterPeerReviewerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdatePeerReviewerPasswordCompletedEventHandler(object sender, UpdatePeerReviewerPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePeerReviewerPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePeerReviewerPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddPeerAcademicQualificationsCompletedEventHandler(object sender, AddPeerAcademicQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPeerAcademicQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPeerAcademicQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddPeerEmploymentRecordCompletedEventHandler(object sender, AddPeerEmploymentRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPeerEmploymentRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPeerEmploymentRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetInstitutionNumberCompletedEventHandler(object sender, GetInstitutionNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInstitutionNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInstitutionNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddLandCompletedEventHandler(object sender, AddLandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteLandCompletedEventHandler(object sender, DeleteLandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditLandCompletedEventHandler(object sender, EditLandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditLandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditLandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditGeneralDetailsCompletedEventHandler(object sender, EditGeneralDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditGeneralDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditGeneralDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditVCDetailsCompletedEventHandler(object sender, EditVCDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditVCDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditVCDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddLibraryStaffCompletedEventHandler(object sender, AddLibraryStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLibraryStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLibraryStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteLibraryStaffCompletedEventHandler(object sender, DeleteLibraryStaffCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLibraryStaffCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLibraryStaffCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591